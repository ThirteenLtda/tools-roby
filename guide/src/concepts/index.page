---
title: Concepts
sort_info: 0
---

What Roby is:

 * it is an __event based__ description of a system or of a system of systems,
   and its(their) execution. At the root of everything are events, that
   represent single points in time, i.e. "things" that happen during execution.
   Roby allows to structure the reaction to these events, i.e. what code should
   be executed when event X is received.
 * it is __single threaded__. Roby's design is based on the reactor pattern. In
   other words, the Roby applications are structured in a receive_event =>
   react_to_event loop, where the reactions should not block. Roby's programming
   interface is the tool that makes this single threaded structure usable.
 * it is __structured__. Unlike other implementations of the reactor patterns,
   events are heavily structured, allowing to understand more easily what
   is happening to the system and -- in the long run -- autonomously adapting
   during execution.
 * it is __plan based__. It is possible, inside Roby, to represent both what
   happened to the system in the past, but also what will happen to it in the
   future.
 * it is an __integration framework__. For those that know those terms: Roby is
   not a planner, but is a plan execution layer. It is not a component
   framework, but allows to monitor those.

