---
title: Building Plans
sort_info: 0
---

This section will deal with the issue of how to create behaviour(s) using Roby.

There are many ways in which you can encode behaviours (as "reaction to
events") in Roby. The most obvious ones are by directly __executing code__ when
these events happen, and do "stuff" in this code. It is the most obvious, but is
also the harder to reuse and the less explicit (i.e. the behaviour is "hidden" in
the code instead of being made explicit in the data structure).

For these reasons, there is a subtle balance to be found between the direct
execution of code in e.g. event handlers and the encoding of behaviours in the
plan structure itself. Moreover, only doing event-based programming in a reactor
like Roby becomes quickly tedious, so structuring the reaction to events in
tasks, but also in so-called "Roby scripts" and state machines makes the
behaviour clearer, instead of exploding it in separate event handlers.

First, this section will detail the programming interfaces for all these
aspects. Then, a few pages will try to explain the role that they all have to
play into a Roby controller.

In summary, this section will describe:

 * how to add code into tasks
 * how to create plans inside planning methods
 * where to put what

